; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -mattr=+cheri128 -mcpu=beri -passes="function(slp-vectorizer)" -S < %s | FileCheck %s

target datalayout = "E-m:e-pf200:128:128:128:64-i8:8:32-i16:16:32-i64:64-n32:64-S128"
target triple = "mips64c128-unknown-freebsd"

;; This previously crashed in TargetLoweringBase due to creating a vector which
;; gave an element type of MVT::cPTR when queried rather than MVT::c128.
define ptr @cmemcpy(ptr addrspace(200) %0, ptr addrspace(200) %1, i1 %tobool) {
; CHECK-LABEL: @cmemcpy(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    br i1 [[TOBOOL:%.*]], label [[IF_END12:%.*]], label [[DO_BODY45:%.*]]
; CHECK:       if.end12:
; CHECK-NEXT:    br label [[DO_BODY45]]
; CHECK:       do.body45:
; CHECK-NEXT:    [[SRC2_0:%.*]] = phi ptr addrspace(200) [ [[TMP0:%.*]], [[IF_END12]] ], [ [[TMP1:%.*]], [[ENTRY:%.*]] ]
; CHECK-NEXT:    [[DST1_0:%.*]] = phi ptr addrspace(200) [ [[TMP1]], [[IF_END12]] ], [ [[TMP0]], [[ENTRY]] ]
; CHECK-NEXT:    [[TMP2:%.*]] = load i64, ptr addrspace(200) [[SRC2_0]], align 8
; CHECK-NEXT:    store i64 [[TMP2]], ptr addrspace(200) [[DST1_0]], align 8
; CHECK-NEXT:    ret ptr null
;
entry:
  br i1 %tobool, label %if.end12, label %do.body45

if.end12:
  br label %do.body45

do.body45:
  %src2.0 = phi ptr addrspace(200) [ %0, %if.end12 ], [ %1, %entry ]
  %dst1.0 = phi ptr addrspace(200) [ %1, %if.end12 ], [ %0, %entry ]
  %2 = load i64, ptr addrspace(200) %src2.0, align 8
  store i64 %2, ptr addrspace(200) %dst1.0, align 8
  ret ptr null
}
