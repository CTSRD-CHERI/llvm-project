; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --scrub-attributes --version 2
; DO NOT EDIT -- This file was generated from test/CodeGen/CHERI-Generic/Inputs/dagcombine-ptradd-deleted-regression.ll
; This would previously crash DAGCombiner::visitPTRADD since the PTRADD
; corresponding to the second GEP would be collapsed to a no-op when
; reassociated and delete the synthesised PTRADD node, not just the ADD, which
; the folding code was not prepared for.
; RUN: llc -mtriple=mips64 -mcpu=cheri128 -mattr=+cheri128 --relocation-model=pic -target-abi n64 %s -o - | FileCheck %s --check-prefix=HYBRID
; RUN: llc -mtriple=mips64 -mcpu=cheri128 -mattr=+cheri128 --relocation-model=pic -target-abi purecap %s -o - | FileCheck %s --check-prefix=PURECAP

declare i32 @bar(i32 addrspace(200)*)

define internal i32 @foo(i32 addrspace(200)* %a, i64 addrspace(200)* %b) nounwind {
; HYBRID-LABEL: foo:
; HYBRID:       # %bb.0: # %entry
; HYBRID-NEXT:    daddiu $sp, $sp, -32
; HYBRID-NEXT:    sd $ra, 24($sp) # 8-byte Folded Spill
; HYBRID-NEXT:    sd $gp, 16($sp) # 8-byte Folded Spill
; HYBRID-NEXT:    csc $c17, $sp, 0($ddc) # 16-byte Folded Spill
; HYBRID-NEXT:    lui $1, %hi(%neg(%gp_rel(foo)))
; HYBRID-NEXT:    daddu $1, $1, $25
; HYBRID-NEXT:    daddiu $gp, $1, %lo(%neg(%gp_rel(foo)))
; HYBRID-NEXT:    cincoffset $c17, $c3, 4
; HYBRID-NEXT:  .LBB0_1: # %loop
; HYBRID-NEXT:    # =>This Inner Loop Header: Depth=1
; HYBRID-NEXT:    ld $25, %call16(bar)($gp)
; HYBRID-NEXT:    .reloc .Ltmp0, R_MIPS_JALR, bar
; HYBRID-NEXT:  .Ltmp0:
; HYBRID-NEXT:    jalr $25
; HYBRID-NEXT:    cmove $c3, $c17
; HYBRID-NEXT:    b .LBB0_1
; HYBRID-NEXT:    nop
;
; PURECAP-LABEL: foo:
; PURECAP:       # %bb.0: # %entry
; PURECAP-NEXT:    cincoffset $c11, $c11, -48
; PURECAP-NEXT:    csc $c19, $zero, 32($c11) # 16-byte Folded Spill
; PURECAP-NEXT:    csc $c18, $zero, 16($c11) # 16-byte Folded Spill
; PURECAP-NEXT:    csc $c17, $zero, 0($c11) # 16-byte Folded Spill
; PURECAP-NEXT:    lui $1, %pcrel_hi(_CHERI_CAPABILITY_TABLE_-8)
; PURECAP-NEXT:    daddiu $1, $1, %pcrel_lo(_CHERI_CAPABILITY_TABLE_-4)
; PURECAP-NEXT:    cgetpccincoffset $c19, $1
; PURECAP-NEXT:    cincoffset $c18, $c3, 4
; PURECAP-NEXT:  .LBB0_1: # %loop
; PURECAP-NEXT:    # =>This Inner Loop Header: Depth=1
; PURECAP-NEXT:    clcbi $c12, %capcall20(bar)($c19)
; PURECAP-NEXT:    cjalr $c12, $c17
; PURECAP-NEXT:    cmove $c3, $c18
; PURECAP-NEXT:    b .LBB0_1
; PURECAP-NEXT:    nop
entry:
  br label %loop

loop:
  %0 = getelementptr inbounds i32, i32 addrspace(200)* %a, i64 1
  %1 = load i64, i64 addrspace(200)* %b, align 16
  %2 = mul i64 0, %1
  %3 = getelementptr inbounds i32, i32 addrspace(200)* %0, i64 %2
  %4 = call i32 @bar(i32 addrspace(200)* %3)
  br label %loop
}
