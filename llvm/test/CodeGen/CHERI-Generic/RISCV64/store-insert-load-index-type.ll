; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --scrub-attributes --version 2
; DO NOT EDIT -- This file was generated from test/CodeGen/CHERI-Generic/Inputs/store-insert-load-index-type.ll
; RUN: llc -mtriple=riscv64 --relocation-model=pic -target-abi l64pc128d -mattr=+xcheri,+cap-mode,+f,+d -O0 < %s | FileCheck %s

;; Test that, when DAGCombiner folds a load-insert-store to just storing the
;; element, it uses the index rather than pointer type for the offset. Without
;; this it would crash with:
;;
;;    Assertion `Int.isZero() && "Should not create non-zero capability " "constants with SelectionDAG::getConstant()"' failed.
define void @foo(ptr addrspace(200) %p) addrspace(200) {
; CHECK-LABEL: foo:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    cmove ca1, ca0
; CHECK-NEXT:    li a0, 0
; CHECK-NEXT:    sb a0, 0(ca1)
; CHECK-NEXT:    ret
entry:
  %0 = load <4 x i8>, ptr addrspace(200) %p, align 4
  %1 = insertelement <4 x i8> %0, i8 0, i64 0
  store <4 x i8> %1, ptr addrspace(200) %p, align 4
  ret void
}
