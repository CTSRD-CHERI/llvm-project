; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --scrub-attributes --version 2
; DO NOT EDIT -- This file was generated from test/CodeGen/CHERI-Generic/Inputs/unaligned-loads-stores-hybrid.ll
; RUN: llc -mtriple=riscv64 --relocation-model=pic -target-abi lp64d -mattr=+xcheri,+f,+d %s -o - | FileCheck %s

@a1 = global i64 0, align 1
@a2 = global i64 0, align 2
@a4 = global i64 0, align 4
@a8 = global i64 0, align 8

define i64 @load_global_i64_align_1(i64 %y) addrspace(200) nounwind {
; CHECK-LABEL: load_global_i64_align_1:
; CHECK:       # %bb.0:
; CHECK-NEXT:  .Lpcrel_hi0:
; CHECK-NEXT:    auipc a0, %got_pcrel_hi(a1)
; CHECK-NEXT:    ld a0, %pcrel_lo(.Lpcrel_hi0)(a0)
; CHECK-NEXT:    cfromptr ca0, ddc, a0
; CHECK-NEXT:    lbu.cap a1, (ca0)
; CHECK-NEXT:    cincoffset ca2, ca0, 1
; CHECK-NEXT:    lbu.cap a2, (ca2)
; CHECK-NEXT:    cincoffset ca3, ca0, 2
; CHECK-NEXT:    lbu.cap a3, (ca3)
; CHECK-NEXT:    cincoffset ca4, ca0, 3
; CHECK-NEXT:    lbu.cap a4, (ca4)
; CHECK-NEXT:    slli a2, a2, 8
; CHECK-NEXT:    or a1, a2, a1
; CHECK-NEXT:    slli a3, a3, 16
; CHECK-NEXT:    slli a4, a4, 24
; CHECK-NEXT:    or a3, a4, a3
; CHECK-NEXT:    or a1, a3, a1
; CHECK-NEXT:    cincoffset ca2, ca0, 4
; CHECK-NEXT:    lbu.cap a2, (ca2)
; CHECK-NEXT:    cincoffset ca3, ca0, 5
; CHECK-NEXT:    lbu.cap a3, (ca3)
; CHECK-NEXT:    cincoffset ca4, ca0, 6
; CHECK-NEXT:    lbu.cap a4, (ca4)
; CHECK-NEXT:    cincoffset ca0, ca0, 7
; CHECK-NEXT:    lbu.cap a0, (ca0)
; CHECK-NEXT:    slli a3, a3, 8
; CHECK-NEXT:    or a2, a3, a2
; CHECK-NEXT:    slli a4, a4, 16
; CHECK-NEXT:    slli a0, a0, 24
; CHECK-NEXT:    or a0, a0, a4
; CHECK-NEXT:    or a0, a0, a2
; CHECK-NEXT:    slli a0, a0, 32
; CHECK-NEXT:    or a0, a0, a1
; CHECK-NEXT:    ret
  %ret = load i64, i64 addrspace(200)* addrspacecast(i64* @a1 to i64 addrspace(200)*), align 1
  ret i64 %ret
}

define i64 @load_global_i64_align_2(i64 %y) addrspace(200) nounwind {
; CHECK-LABEL: load_global_i64_align_2:
; CHECK:       # %bb.0:
; CHECK-NEXT:  .Lpcrel_hi1:
; CHECK-NEXT:    auipc a0, %got_pcrel_hi(a2)
; CHECK-NEXT:    ld a0, %pcrel_lo(.Lpcrel_hi1)(a0)
; CHECK-NEXT:    cfromptr ca0, ddc, a0
; CHECK-NEXT:    lhu.cap a1, (ca0)
; CHECK-NEXT:    cincoffset ca2, ca0, 2
; CHECK-NEXT:    lhu.cap a2, (ca2)
; CHECK-NEXT:    cincoffset ca3, ca0, 4
; CHECK-NEXT:    lhu.cap a3, (ca3)
; CHECK-NEXT:    cincoffset ca0, ca0, 6
; CHECK-NEXT:    lhu.cap a0, (ca0)
; CHECK-NEXT:    slli a2, a2, 16
; CHECK-NEXT:    or a1, a2, a1
; CHECK-NEXT:    slli a3, a3, 32
; CHECK-NEXT:    slli a0, a0, 48
; CHECK-NEXT:    or a0, a0, a3
; CHECK-NEXT:    or a0, a0, a1
; CHECK-NEXT:    ret
  %ret = load i64, i64 addrspace(200)* addrspacecast(i64* @a2 to i64 addrspace(200)*), align 2
  ret i64 %ret
}

define i64 @load_global_i64_align_4(i64 %y) addrspace(200) nounwind {
; CHECK-LABEL: load_global_i64_align_4:
; CHECK:       # %bb.0:
; CHECK-NEXT:  .Lpcrel_hi2:
; CHECK-NEXT:    auipc a0, %got_pcrel_hi(a4)
; CHECK-NEXT:    ld a0, %pcrel_lo(.Lpcrel_hi2)(a0)
; CHECK-NEXT:    cfromptr ca0, ddc, a0
; CHECK-NEXT:    cincoffset ca1, ca0, 4
; CHECK-NEXT:    lwu.cap a1, (ca1)
; CHECK-NEXT:    lwu.cap a0, (ca0)
; CHECK-NEXT:    slli a1, a1, 32
; CHECK-NEXT:    or a0, a1, a0
; CHECK-NEXT:    ret
  %ret = load i64, i64 addrspace(200)* addrspacecast(i64* @a4 to i64 addrspace(200)*), align 4
  ret i64 %ret
}

define i64 @load_global_i64_align_8(i64 %y) addrspace(200) nounwind {
; CHECK-LABEL: load_global_i64_align_8:
; CHECK:       # %bb.0:
; CHECK-NEXT:  .Lpcrel_hi3:
; CHECK-NEXT:    auipc a0, %got_pcrel_hi(a8)
; CHECK-NEXT:    ld a0, %pcrel_lo(.Lpcrel_hi3)(a0)
; CHECK-NEXT:    cfromptr ca0, ddc, a0
; CHECK-NEXT:    ld.cap a0, (ca0)
; CHECK-NEXT:    ret
  %ret = load i64, i64 addrspace(200)* addrspacecast(i64* @a8 to i64 addrspace(200)*), align 8
  ret i64 %ret
}

define void @store_global_i64_align_1(i64 %y) addrspace(200) nounwind {
; CHECK-LABEL: store_global_i64_align_1:
; CHECK:       # %bb.0:
; CHECK-NEXT:  .Lpcrel_hi4:
; CHECK-NEXT:    auipc a1, %got_pcrel_hi(a1)
; CHECK-NEXT:    ld a1, %pcrel_lo(.Lpcrel_hi4)(a1)
; CHECK-NEXT:    cfromptr ca1, ddc, a1
; CHECK-NEXT:    sb.cap a0, (ca1)
; CHECK-NEXT:    srli a2, a0, 56
; CHECK-NEXT:    cincoffset ca3, ca1, 7
; CHECK-NEXT:    sb.cap a2, (ca3)
; CHECK-NEXT:    srli a2, a0, 48
; CHECK-NEXT:    cincoffset ca3, ca1, 6
; CHECK-NEXT:    sb.cap a2, (ca3)
; CHECK-NEXT:    srli a2, a0, 40
; CHECK-NEXT:    cincoffset ca3, ca1, 5
; CHECK-NEXT:    sb.cap a2, (ca3)
; CHECK-NEXT:    srli a2, a0, 32
; CHECK-NEXT:    cincoffset ca3, ca1, 4
; CHECK-NEXT:    sb.cap a2, (ca3)
; CHECK-NEXT:    srli a2, a0, 24
; CHECK-NEXT:    cincoffset ca3, ca1, 3
; CHECK-NEXT:    sb.cap a2, (ca3)
; CHECK-NEXT:    srli a2, a0, 16
; CHECK-NEXT:    cincoffset ca3, ca1, 2
; CHECK-NEXT:    sb.cap a2, (ca3)
; CHECK-NEXT:    srli a0, a0, 8
; CHECK-NEXT:    cincoffset ca1, ca1, 1
; CHECK-NEXT:    sb.cap a0, (ca1)
; CHECK-NEXT:    ret
  store i64 %y, i64 addrspace(200)* addrspacecast(i64* @a1 to i64 addrspace(200)*), align 1
  ret void
}

define void @store_global_i64_align_2(i64 %y) addrspace(200) nounwind {
; CHECK-LABEL: store_global_i64_align_2:
; CHECK:       # %bb.0:
; CHECK-NEXT:  .Lpcrel_hi5:
; CHECK-NEXT:    auipc a1, %got_pcrel_hi(a2)
; CHECK-NEXT:    ld a1, %pcrel_lo(.Lpcrel_hi5)(a1)
; CHECK-NEXT:    cfromptr ca1, ddc, a1
; CHECK-NEXT:    sh.cap a0, (ca1)
; CHECK-NEXT:    srli a2, a0, 48
; CHECK-NEXT:    cincoffset ca3, ca1, 6
; CHECK-NEXT:    sh.cap a2, (ca3)
; CHECK-NEXT:    srli a2, a0, 32
; CHECK-NEXT:    cincoffset ca3, ca1, 4
; CHECK-NEXT:    sh.cap a2, (ca3)
; CHECK-NEXT:    srli a0, a0, 16
; CHECK-NEXT:    cincoffset ca1, ca1, 2
; CHECK-NEXT:    sh.cap a0, (ca1)
; CHECK-NEXT:    ret
  store i64 %y, i64 addrspace(200)* addrspacecast(i64* @a2 to i64 addrspace(200)*), align 2
  ret void
}

define void @store_global_i64_align_4(i64 %y) addrspace(200) nounwind {
; CHECK-LABEL: store_global_i64_align_4:
; CHECK:       # %bb.0:
; CHECK-NEXT:  .Lpcrel_hi6:
; CHECK-NEXT:    auipc a1, %got_pcrel_hi(a4)
; CHECK-NEXT:    ld a1, %pcrel_lo(.Lpcrel_hi6)(a1)
; CHECK-NEXT:    cfromptr ca1, ddc, a1
; CHECK-NEXT:    sw.cap a0, (ca1)
; CHECK-NEXT:    srli a0, a0, 32
; CHECK-NEXT:    cincoffset ca1, ca1, 4
; CHECK-NEXT:    sw.cap a0, (ca1)
; CHECK-NEXT:    ret
  store i64 %y, i64 addrspace(200)* addrspacecast(i64* @a4 to i64 addrspace(200)*), align 4
  ret void
}

define void @store_global_i64_align_8(i64 %y) addrspace(200) nounwind {
; CHECK-LABEL: store_global_i64_align_8:
; CHECK:       # %bb.0:
; CHECK-NEXT:  .Lpcrel_hi7:
; CHECK-NEXT:    auipc a1, %got_pcrel_hi(a8)
; CHECK-NEXT:    ld a1, %pcrel_lo(.Lpcrel_hi7)(a1)
; CHECK-NEXT:    cfromptr ca1, ddc, a1
; CHECK-NEXT:    sd.cap a0, (ca1)
; CHECK-NEXT:    ret
  store i64 %y, i64 addrspace(200)* addrspacecast(i64* @a8 to i64 addrspace(200)*), align 8
  ret void
}
