; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv32 -target-abi ilp32 -mattr=+xcheri,-cap-mode,-f,-d -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefix=RV32IXCHERI-ILP32 %s
; RUN: llc -mtriple=riscv32 -target-abi ilp32d -mattr=+xcheri,-cap-mode,+f,+d -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefix=RV32IXCHERI-ILP32D %s
; RUN: llc -mtriple=riscv64 -target-abi lp64 -mattr=+xcheri,-cap-mode,-f,-d -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefix=RV64IXCHERI-LP64 %s
; RUN: llc -mtriple=riscv64 -target-abi lp64d -mattr=+xcheri,-cap-mode,+f,+d -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefix=RV64IXCHERI-LP64D %s

define float @load_float_via_cap(float addrspace(200)* %a) nounwind {
; RV32IXCHERI-ILP32-LABEL: load_float_via_cap:
; RV32IXCHERI-ILP32:       # %bb.0:
; RV32IXCHERI-ILP32-NEXT:    lw.cap a0, (ca0)
; RV32IXCHERI-ILP32-NEXT:    ret
;
; RV32IXCHERI-ILP32D-LABEL: load_float_via_cap:
; RV32IXCHERI-ILP32D:       # %bb.0:
; RV32IXCHERI-ILP32D-NEXT:    lw.cap a0, (ca0)
; RV32IXCHERI-ILP32D-NEXT:    fmv.w.x fa0, a0
; RV32IXCHERI-ILP32D-NEXT:    ret
;
; RV64IXCHERI-LP64-LABEL: load_float_via_cap:
; RV64IXCHERI-LP64:       # %bb.0:
; RV64IXCHERI-LP64-NEXT:    lw.cap a0, (ca0)
; RV64IXCHERI-LP64-NEXT:    ret
;
; RV64IXCHERI-LP64D-LABEL: load_float_via_cap:
; RV64IXCHERI-LP64D:       # %bb.0:
; RV64IXCHERI-LP64D-NEXT:    lw.cap a0, (ca0)
; RV64IXCHERI-LP64D-NEXT:    fmv.w.x fa0, a0
; RV64IXCHERI-LP64D-NEXT:    ret
  %loaded = load float, float addrspace(200)* %a, align 4
  ret float %loaded
}

define void @store_float_via_cap(float addrspace(200)* %a, float %value) nounwind {
; RV32IXCHERI-ILP32-LABEL: store_float_via_cap:
; RV32IXCHERI-ILP32:       # %bb.0:
; RV32IXCHERI-ILP32-NEXT:    sw.cap a1, (ca0)
; RV32IXCHERI-ILP32-NEXT:    ret
;
; RV32IXCHERI-ILP32D-LABEL: store_float_via_cap:
; RV32IXCHERI-ILP32D:       # %bb.0:
; RV32IXCHERI-ILP32D-NEXT:    fmv.x.w a1, fa0
; RV32IXCHERI-ILP32D-NEXT:    sw.cap a1, (ca0)
; RV32IXCHERI-ILP32D-NEXT:    ret
;
; RV64IXCHERI-LP64-LABEL: store_float_via_cap:
; RV64IXCHERI-LP64:       # %bb.0:
; RV64IXCHERI-LP64-NEXT:    sw.cap a1, (ca0)
; RV64IXCHERI-LP64-NEXT:    ret
;
; RV64IXCHERI-LP64D-LABEL: store_float_via_cap:
; RV64IXCHERI-LP64D:       # %bb.0:
; RV64IXCHERI-LP64D-NEXT:    fmv.x.w a1, fa0
; RV64IXCHERI-LP64D-NEXT:    sw.cap a1, (ca0)
; RV64IXCHERI-LP64D-NEXT:    ret
  store float %value, float addrspace(200)* %a, align 4
  ret void
}
