; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %riscv32_cheri_purecap_llc -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefix=RV32IXCHERI-IL32PC64 %s
; RUN: %riscv64_cheri_purecap_llc -verify-machineinstrs < %s \
; RUN:   | FileCheck -check-prefix=RV64IXCHERI-L64PC128 %s

define dso_local void @bar() addrspace(200) nounwind {
; RV32IXCHERI-IL32PC64-LABEL: bar:
; RV32IXCHERI-IL32PC64:       # %bb.0: # %entry
; RV32IXCHERI-IL32PC64-NEXT:    cincoffset csp, csp, -2032
; RV32IXCHERI-IL32PC64-NEXT:    csc cra, 2024(csp)
; RV32IXCHERI-IL32PC64-NEXT:    lui a0, 1048575
; RV32IXCHERI-IL32PC64-NEXT:    addi a0, a0, 2016
; RV32IXCHERI-IL32PC64-NEXT:    cincoffset csp, csp, a0
; RV32IXCHERI-IL32PC64-NEXT:    lui a0, 1
; RV32IXCHERI-IL32PC64-NEXT:    cincoffset ca1, csp, 8
; RV32IXCHERI-IL32PC64-NEXT:    csetbounds ca0, ca1, a0
; RV32IXCHERI-IL32PC64-NEXT:    ccall foo
; RV32IXCHERI-IL32PC64-NEXT:    lui a0, 1
; RV32IXCHERI-IL32PC64-NEXT:    addi a0, a0, -2016
; RV32IXCHERI-IL32PC64-NEXT:    cincoffset csp, csp, a0
; RV32IXCHERI-IL32PC64-NEXT:    clc cra, 2024(csp)
; RV32IXCHERI-IL32PC64-NEXT:    cincoffset csp, csp, 2032
; RV32IXCHERI-IL32PC64-NEXT:    cret
;
; RV64IXCHERI-L64PC128-LABEL: bar:
; RV64IXCHERI-L64PC128:       # %bb.0: # %entry
; RV64IXCHERI-L64PC128-NEXT:    cincoffset csp, csp, -2032
; RV64IXCHERI-L64PC128-NEXT:    csc cra, 2016(csp)
; RV64IXCHERI-L64PC128-NEXT:    lui a0, 1048575
; RV64IXCHERI-L64PC128-NEXT:    addiw a0, a0, 2000
; RV64IXCHERI-L64PC128-NEXT:    cincoffset csp, csp, a0
; RV64IXCHERI-L64PC128-NEXT:    lui a0, 1
; RV64IXCHERI-L64PC128-NEXT:    cincoffset ca1, csp, 16
; RV64IXCHERI-L64PC128-NEXT:    csetbounds ca0, ca1, a0
; RV64IXCHERI-L64PC128-NEXT:    ccall foo
; RV64IXCHERI-L64PC128-NEXT:    lui a0, 1
; RV64IXCHERI-L64PC128-NEXT:    addiw a0, a0, -2000
; RV64IXCHERI-L64PC128-NEXT:    cincoffset csp, csp, a0
; RV64IXCHERI-L64PC128-NEXT:    clc cra, 2016(csp)
; RV64IXCHERI-L64PC128-NEXT:    cincoffset csp, csp, 2032
; RV64IXCHERI-L64PC128-NEXT:    cret
entry:
  %buf = alloca [4096 x i8], align 1, addrspace(200)
  %0 = getelementptr inbounds [4096 x i8], [4096 x i8] addrspace(200)* %buf, i32 0, i32 0
  call addrspace(200) void @llvm.lifetime.start.p200i8(i64 4096, i8 addrspace(200)* nonnull %0) #3
  call addrspace(200) void @foo(i8 addrspace(200)* nonnull %0) #3
  call addrspace(200) void @llvm.lifetime.end.p200i8(i64 4096, i8 addrspace(200)* nonnull %0) #3
  ret void
}

declare void @llvm.lifetime.start.p200i8(i64 immarg, i8 addrspace(200)* nocapture) addrspace(200)
declare void @llvm.lifetime.end.p200i8(i64 immarg, i8 addrspace(200)* nocapture) addrspace(200)

declare void @foo(i8 addrspace(200)*) addrspace(200)
