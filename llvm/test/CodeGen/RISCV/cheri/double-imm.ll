; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; Check that .LCPI symbols have a size associated with them.
; TODO: Enable once BuildPairF64 works for purecap
; RUNNOT: %riscv32_cheri_purecap_llc -mattr=+d -verify-machineinstrs < %s \
; RUNNOT:   | FileCheck --check-prefix=CHECK,IL32PC64 %s
; RUN: %riscv64_cheri_purecap_llc -mattr=+d -verify-machineinstrs < %s \
; RUN:   | FileCheck --check-prefixes=CHECK,L64PC128 %s --allow-unused-prefixes

; CHECK-LABEL: .section .sdata,"aw",@progbits
; CHECK-NEXT:  .p2align 3
; CHECK-NEXT: .LCPI0_0:
; CHECK-NEXT:  .quad 0x3ff0000000000000 # double 1
; CHECK-NEXT:  .size .LCPI0_0, 8
; CHECK-NEXT:  .text

define double @double_add_const(double %a) nounwind {
; CHECK-LABEL: double_add_const:
; CHECK:       # %bb.0:
; CHECK-NEXT:  .LBB0_1: # Label of block must be emitted
; CHECK-NEXT:    auipcc ca0, %pcrel_hi(.LCPI0_0)
; CHECK-NEXT:    cincoffset ca0, ca0, %pcrel_lo(.LBB0_1)
; CHECK-NEXT:    fld fa5, 0(ca0)
; CHECK-NEXT:    fadd.d fa0, fa0, fa5
; CHECK-NEXT:    ret
  %1 = fadd double %a, 1.0
  ret double %1
}

define float @float_add_const(float %a) nounwind {
; CHECK-LABEL: float_add_const:
; CHECK:       # %bb.0:
; CHECK-NEXT:    lui a0, 260096
; CHECK-NEXT:    fmv.w.x fa5, a0
; CHECK-NEXT:    fadd.s fa0, fa0, fa5
; CHECK-NEXT:    ret
  %1 = fadd float %a, 1.0
  ret float %1
}
