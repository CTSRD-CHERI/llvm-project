; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; RUN: %riscv64_cheri_purecap_llc -start-before=riscv-isel < %s | FileCheck %s
;; This is a reduced testcase for an infinite combine that was fixed by
;; "[CodeGen] Don't create combine loops for PTRADD with opaque constants"
;; (commit 511c1e0089b4112d4dfbc8b3b093c588aeedb8e9)

define ptr addrspace(200) @wwv_rf(ptr addrspace(200) %arg) addrspace(200) {
; CHECK-LABEL: wwv_rf:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    lui a1, 1
; CHECK-NEXT:    addiw a1, a1, -656
; CHECK-NEXT:    cincoffset ca0, ca0, a1
; CHECK-NEXT:    cincoffset ca0, ca0, 112
; CHECK-NEXT:    ret
entry:
  ; We need an opaque constant here to trigger the infinite loop that keeps
  ; changing between (ptradd arg, (add 122, opaque 3440)) and
  ; (ptradd (ptradd arg, 122), opaque 3440). Without the opaque constant,
  ; the addition would just be folded to 3522.
  %const5 = bitcast i64 3440 to i64
  %const_mat = add i64 %const5, 112
  %scevgep2 = getelementptr i8, ptr addrspace(200) %arg, i64 %const_mat
  ret ptr addrspace(200) %scevgep2
}
