; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;; CClearTag is not part of the standard, check that we don't emit it
; RUN: %riscv64_cheri_purecap_llc -verify-machineinstrs < %s | FileCheck %s --check-prefix=XCHERI
; RUN: %riscv64_cheri_purecap_llc -mattr=+xcheri-std-compat -verify-machineinstrs < %s | FileCheck %s --check-prefix=STD-COMPAT

define internal ptr addrspace(200) @test(ptr addrspace(200) %dst, ptr addrspace(200) %cap) addrspace(200) nounwind {
; XCHERI-LABEL: test:
; XCHERI:       # %bb.0: # %entry
; XCHERI-NEXT:    ccleartag ca1, ca1
; XCHERI-NEXT:    csc ca1, 0(ca0)
; XCHERI-NEXT:    cmove ca0, ca1
; XCHERI-NEXT:    cret
;
; STD-COMPAT-LABEL: test:
; STD-COMPAT:       # %bb.0: # %entry
; STD-COMPAT-NEXT:    cgethigh a2, ca1
; STD-COMPAT-NEXT:    csethigh ca1, ca1, a2
; STD-COMPAT-NEXT:    csc ca1, 0(ca0)
; STD-COMPAT-NEXT:    cmove ca0, ca1
; STD-COMPAT-NEXT:    cret
entry:
  %new = call ptr addrspace(200) @llvm.cheri.cap.tag.clear(ptr addrspace(200) %cap)
  store ptr addrspace(200) %new, ptr addrspace(200) %dst, align 16
  ret ptr addrspace(200) %new
}

declare ptr addrspace(200) @llvm.cheri.cap.tag.clear(ptr addrspace(200)) addrspace(200)
