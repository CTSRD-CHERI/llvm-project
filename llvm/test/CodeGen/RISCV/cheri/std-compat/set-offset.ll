; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;; CSetOffset is not part of the standard, check that we emit SCADDR(c, GCBASE(c)+offset) instead.
; RUN: %riscv64_cheri_purecap_llc -verify-machineinstrs < %s | FileCheck %s --check-prefix=XCHERI
; RUN: %riscv64_cheri_purecap_llc -mattr=+xcheri-std-compat -verify-machineinstrs < %s | FileCheck %s --check-prefix=STD-COMPAT

define internal ptr addrspace(200) @test(ptr addrspace(200) %dst, ptr addrspace(200) %cap, i64 %offset) addrspace(200) nounwind {
; XCHERI-LABEL: test:
; XCHERI:       # %bb.0: # %entry
; XCHERI-NEXT:    csetoffset ca1, ca1, a2
; XCHERI-NEXT:    csc ca1, 0(ca0)
; XCHERI-NEXT:    cmove ca0, ca1
; XCHERI-NEXT:    cret
;
; STD-COMPAT-LABEL: test:
; STD-COMPAT:       # %bb.0: # %entry
; STD-COMPAT-NEXT:    cgetbase a3, ca1
; STD-COMPAT-NEXT:    add a2, a3, a2
; STD-COMPAT-NEXT:    csetaddr ca1, ca1, a2
; STD-COMPAT-NEXT:    csc ca1, 0(ca0)
; STD-COMPAT-NEXT:    cmove ca0, ca1
; STD-COMPAT-NEXT:    cret
entry:
  %new = call addrspace(200) ptr addrspace(200) @llvm.cheri.cap.offset.set.i64(ptr addrspace(200) %cap, i64 %offset)
  store ptr addrspace(200) %new, ptr addrspace(200) %dst, align 16
  ret ptr addrspace(200) %new
}

;; SetOffset with zero should be folded to setaddr(getbase())
define internal ptr addrspace(200) @test_zero_offset(ptr addrspace(200) %dst, ptr addrspace(200) %cap) addrspace(200) nounwind {
; XCHERI-LABEL: test_zero_offset:
; XCHERI:       # %bb.0: # %entry
; XCHERI-NEXT:    csetoffset ca1, ca1, zero
; XCHERI-NEXT:    csc ca1, 0(ca0)
; XCHERI-NEXT:    cmove ca0, ca1
; XCHERI-NEXT:    cret
;
; STD-COMPAT-LABEL: test_zero_offset:
; STD-COMPAT:       # %bb.0: # %entry
; STD-COMPAT-NEXT:    cgetbase a2, ca1
; STD-COMPAT-NEXT:    csetaddr ca1, ca1, a2
; STD-COMPAT-NEXT:    csc ca1, 0(ca0)
; STD-COMPAT-NEXT:    cmove ca0, ca1
; STD-COMPAT-NEXT:    cret
entry:
  %new = call addrspace(200) ptr addrspace(200) @llvm.cheri.cap.offset.set.i64(ptr addrspace(200) %cap, i64 0)
  store ptr addrspace(200) %new, ptr addrspace(200) %dst, align 16
  ret ptr addrspace(200) %new
}

declare ptr addrspace(200) @llvm.cheri.cap.offset.set.i64(ptr addrspace(200), i64) addrspace(200)
