; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
;; CRRL is not part of the standard, check that we emit ((len + ~mask) & mask) instead.
; RUN: %riscv64_cheri_purecap_llc -verify-machineinstrs < %s | FileCheck %s --check-prefix=XCHERI
; RUN: %riscv64_cheri_purecap_llc -mattr=+xcheri-std-compat -verify-machineinstrs < %s | FileCheck %s --check-prefix=STD-COMPAT

define internal i64 @crrl(i64 %len) addrspace(200) nounwind {
; XCHERI-LABEL: crrl:
; XCHERI:       # %bb.0: # %entry
; XCHERI-NEXT:    crrl a0, a0
; XCHERI-NEXT:    cret
;
; STD-COMPAT-LABEL: crrl:
; STD-COMPAT:       # %bb.0: # %entry
; STD-COMPAT-NEXT:    cram a1, a0
; STD-COMPAT-NEXT:    not a2, a1
; STD-COMPAT-NEXT:    add a0, a0, a2
; STD-COMPAT-NEXT:    and a0, a0, a1
; STD-COMPAT-NEXT:    cret
entry:
  %result = call addrspace(200) i64 @llvm.cheri.round.representable.length.i64(i64 %len)
  ret i64 %result
}

declare i64 @llvm.cheri.round.representable.length.i64(i64) addrspace(200)
