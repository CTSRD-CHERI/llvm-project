# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# Check that we can rematerialize constant CIncOffset/CMove instead of spilling to the stack
# RUN: %riscv64_cheri_llc -verify-machineinstrs %s -o - -run-pass=simple-register-coalescing | FileCheck %s
--- |
  declare void @external_fn(i8 addrspace(200)*) addrspace(200) nounwind

  define void @test_remat() addrspace(200) nounwind {
    call void @external_fn(i8 addrspace(200)* getelementptr (i8, i8 addrspace(200)* null, i64 123)) nounwind
    ret void
  }

...
---
name:            test_remat
alignment:       4
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:
  - { id: 0, class: gpcr, preferred-register: '' }
  - { id: 1, class: gpcr, preferred-register: '' }
  - { id: 2, class: gpcr, preferred-register: '' }
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        true
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0 (%ir-block.0):
    ; CHECK-LABEL: name: test_remat
    ; CHECK: ADJCALLSTACKDOWNCAP 0, 0, implicit-def dead $c2, implicit $c2
    ; CHECK-NEXT: dead %5:gpcr = PseudoCLGC @external_fn
    ; CHECK-NEXT: $c23 = COPY $c2
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpcr = COPY $c23
    ; CHECK-NEXT: [[CIncOffsetImm:%[0-9]+]]:gpcr = CIncOffsetImm [[COPY]], 321
    ; CHECK-NEXT: $c10 = CIncOffsetImm $c0, 123
    ; CHECK-NEXT: $c11 = CMove $c0
    ; CHECK-NEXT: $c12 = COPY [[CIncOffsetImm]]
    ; CHECK-NEXT: PseudoCCALL target-flags(riscv-ccall) @external_fn, csr_il32pc64_l64pc128, implicit-def dead $c1, implicit killed $c10, implicit killed $c11, implicit killed $c12, implicit-def $c2
    ; CHECK-NEXT: ADJCALLSTACKUPCAP 0, 0, implicit-def dead $c2, implicit $c2
    ; CHECK-NEXT: ADJCALLSTACKDOWNCAP 0, 0, implicit-def dead $c2, implicit $c2
    ; CHECK-NEXT: $c10 = CIncOffsetImm $c0, 123
    ; CHECK-NEXT: $c11 = CMove $c0
    ; CHECK-NEXT: $c12 = COPY [[CIncOffsetImm]]
    ; CHECK-NEXT: PseudoCCALL target-flags(riscv-ccall) @external_fn, csr_il32pc64_l64pc128, implicit-def dead $c1, implicit killed $c10, implicit killed $c11, implicit killed $c12, implicit-def $c2
    ; CHECK-NEXT: ADJCALLSTACKUPCAP 0, 0, implicit-def dead $c2, implicit $c2
    ; CHECK-NEXT: ADJCALLSTACKDOWNCAP 0, 0, implicit-def dead $c2, implicit $c2
    ; CHECK-NEXT: $c10 = CIncOffsetImm $c0, 123
    ; CHECK-NEXT: $c11 = CMove $c0
    ; CHECK-NEXT: $c12 = COPY [[CIncOffsetImm]]
    ; CHECK-NEXT: PseudoCCALL target-flags(riscv-ccall) @external_fn, csr_il32pc64_l64pc128, implicit-def dead $c1, implicit killed $c10, implicit killed $c11, implicit killed $c12, implicit-def $c2
    ; CHECK-NEXT: ADJCALLSTACKUPCAP 0, 0, implicit-def dead $c2, implicit $c2
    ; CHECK-NEXT: PseudoCRET
    ADJCALLSTACKDOWNCAP 0, 0, implicit-def dead $c2, implicit $c2
    %0:gpcr = COPY $c0
    %1:gpcr = CIncOffsetImm %0, 123
    %2:gpcr = PseudoCLGC @external_fn
    %2:gpcr = CMove killed %0
    $c23 = COPY $c2
    %3:gpcr = COPY $c23
    %4:gpcr = CIncOffsetImm %3, 321
    $c10 = COPY %1
    $c11 = COPY %2
    $c12 = COPY %4
    PseudoCCALL target-flags(riscv-ccall) @external_fn, csr_il32pc64_l64pc128, implicit-def dead $c1, implicit killed $c10, implicit killed $c11, implicit killed $c12, implicit-def $c2
    ADJCALLSTACKUPCAP 0, 0, implicit-def dead $c2, implicit $c2
    ADJCALLSTACKDOWNCAP 0, 0, implicit-def dead $c2, implicit $c2
    $c10 = COPY %1
    $c11 = COPY %2
    $c12 = COPY %4
    PseudoCCALL target-flags(riscv-ccall) @external_fn, csr_il32pc64_l64pc128, implicit-def dead $c1, implicit killed $c10, implicit killed $c11, implicit killed $c12, implicit-def $c2
    ADJCALLSTACKUPCAP 0, 0, implicit-def dead $c2, implicit $c2
    ADJCALLSTACKDOWNCAP 0, 0, implicit-def dead $c2, implicit $c2
    $c10 = COPY killed %1
    $c11 = COPY %2
    $c12 = COPY %4
    PseudoCCALL target-flags(riscv-ccall) @external_fn, csr_il32pc64_l64pc128, implicit-def dead $c1, implicit killed $c10, implicit killed $c11, implicit killed $c12, implicit-def $c2
    ADJCALLSTACKUPCAP 0, 0, implicit-def dead $c2, implicit $c2
    PseudoCRET
...
