# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUNNOT: %cheri_purecap_llc -cheri-cap-table-abi=plt %s -verify-machineinstrs -start-before=mips-delay-slot-filler -stop-after=mips-delay-slot-filler -o - -debug
# RUN: %cheri_purecap_llc -cheri-cap-table-abi=plt %s -verify-machineinstrs -start-before=mips-delay-slot-filler -stop-after=mips-delay-slot-filler -o - | FileCheck %s
# Previously the delay slot filler would not place "cmove $c26, $c18" instructions to restore the original $cgp in cjalr delay slots.

--- |
  ; ModuleID = '/Users/alex/cheri/llvm/test/CodeGen/Mips/cheri/cap-table-external-call.ll'
  source_filename = "/Users/alex/cheri/llvm/test/CodeGen/Mips/cheri/cap-table-external-call.ll"
  target datalayout = "E-m:e-pf200:128:128:128:64-i8:8:32-i16:16:32-i64:64-n32:64-S128-A200-P200-G200"
  target triple = "cheri-unknown-freebsd"

  declare i32 @external_fn1(...) addrspace(200) #0

  declare i32 @external_fn2() addrspace(200) #0

  define i32 @a() addrspace(0) #0 {
  entry:
    %call = call i32 (...) @external_fn1()
    %call2 = call i32 @external_fn2()
    %result = add i32 %call, %call2
    ret i32 %result
  }

  ; Function Attrs: nounwind
  declare void @llvm.stackprotector(i8*, i8**) addrspace(200) #1

  attributes #0 ={ nounwind }
  attributes #1 = { nounwind }

...
---
name:            a
alignment:       8
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:
  - { reg: '$c26', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       48
  offsetAdjustment: 0
  maxAlignment:    16
  adjustsStack:    true
  hasCalls:        true
  stackProtector:  ''
  maxCallFrameSize: 0
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:
  - { id: 0, name: '', type: spill-slot, offset: -8, size: 8, alignment: 8,
      stack-id: default, callee-saved-register: '$s0_64', callee-saved-restored: true,
      debug-info-variable: '', debug-info-expression: '', debug-info-location: '' }
  - { id: 1, name: '', type: spill-slot, offset: -32, size: 16, alignment: 16,
      stack-id: default, callee-saved-register: '$c18', callee-saved-restored: true,
      debug-info-variable: '', debug-info-expression: '', debug-info-location: '' }
  - { id: 2, name: '', type: spill-slot, offset: -48, size: 16, alignment: 16,
      stack-id: default, callee-saved-register: '$c17', callee-saved-restored: true,
      debug-info-variable: '', debug-info-expression: '', debug-info-location: '' }
constants:       []
body:             |
  bb.0.entry:
    liveins: $c26, $s0_64, $c18, $c17

    ; CHECK-LABEL: name: a
    ; CHECK:      $c11 = CIncOffsetImm $c11, -48
    ; CHECK-NEXT: CAPSTORE64 killed $s0_64, $zero_64, 40, $c11 :: (store (s64) into %stack.0)
    ; CHECK-NEXT: STORECAP killed $c18, $zero_64, 16, $c11 :: (store (s128) into %stack.1)
    ; CHECK-NEXT: STORECAP killed $c17, $zero_64, 0, $c11 :: (store (s128) into %stack.2)
    ; CHECK-NEXT: $c18 = CMove $c26
    ; CHECK-NEXT: renamable $c12 = LOADCAP_BigImm target-flags(mips-captable20-call) @external_fn1, renamable $c18 :: (load (s128) from call-entry @external_fn1)
    ; $c26 = CMove $c18 was not moved into the delay slot previously
    ; CHECK-NEXT: CapJumpLinkPseudo $c12, csr_cheri_purecap, implicit-def dead $c17, implicit-def dead $c26, implicit $c26, implicit-def $c11, implicit-def $v0 {
    ; CHECK-NEXT:   $c26 = CMove $c18
    ; CHECK-NEXT: }
    ; CHECK-NEXT: $s0 = OR $v0, $zero
    ; CHECK-NEXT: renamable $c12 = LOADCAP_BigImm target-flags(mips-captable20-call) @external_fn2, renamable $c18 :: (load (s128) from call-entry @external_fn2)
    ; CHECK-NEXT: CapJumpLinkPseudo $c12, csr_cheri_purecap, implicit-def dead $c17, implicit-def dead $c26, implicit $c26, implicit-def $c11, implicit-def $v0 {
    ; CHECK-NEXT:   $c26 = CMove killed $c18
    ; CHECK-NEXT: }
    ; CHECK-NEXT: renamable $v0 = ADDu killed renamable $s0, killed renamable $v0
    ; CHECK-NEXT: $c17 = LOADCAP $zero_64, 0, $c11 :: (load (s128) from %stack.2)
    ; CHECK-NEXT: $c18 = LOADCAP $zero_64, 16, $c11 :: (load (s128) from %stack.1)
    ; CHECK-NEXT: $s0_64 = CAPLOAD64 $zero_64, 40, $c11 :: (load (s64) from %stack.0)
    ; CHECK-NEXT: PseudoReturnCap $c17 {
    ; CHECK-NEXT:   $c11 = CIncOffsetImm $c11, 48
    ; CHECK-NEXT: }
    $c11 = CIncOffsetImm $c11, -48
    CAPSTORE64 killed $s0_64, $zero_64, 40, $c11 :: (store (s64) into %stack.0)
    STORECAP killed $c18, $zero_64, 16, $c11 :: (store (s128) into %stack.1)
    STORECAP killed $c17, $zero_64, 0, $c11 :: (store (s128) into %stack.2)
    $c18 = CMove $c26
    renamable $c12 = LOADCAP_BigImm target-flags(mips-captable20-call) @external_fn1, renamable $c18 :: (load (s128) from call-entry @external_fn1)
    $c26 = CMove $c18
    CapJumpLinkPseudo $c12, csr_cheri_purecap, implicit-def dead $c17, implicit-def dead $c26, implicit $c26, implicit-def $c11, implicit-def $v0
    $s0 = OR $v0, $zero
    renamable $c12 = LOADCAP_BigImm target-flags(mips-captable20-call) @external_fn2, renamable $c18 :: (load (s128) from call-entry @external_fn2)
    $c26 = CMove killed $c18
    CapJumpLinkPseudo $c12, csr_cheri_purecap, implicit-def dead $c17, implicit-def dead $c26, implicit $c26, implicit-def $c11, implicit-def $v0
    renamable $v0 = ADDu killed renamable $s0, killed renamable $v0
    $c17 = LOADCAP $zero_64, 0, $c11 :: (load (s128) from %stack.2)
    $c18 = LOADCAP $zero_64, 16, $c11 :: (load (s128) from %stack.1)
    $s0_64 = CAPLOAD64 $zero_64, 40, $c11 :: (load (s64) from %stack.0)
    $c11 = CIncOffsetImm $c11, 48
    PseudoReturnCap $c17

...
