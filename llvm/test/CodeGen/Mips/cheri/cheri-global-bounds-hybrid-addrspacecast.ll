; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; Check that we add a csetbounds for addrspacecasted values:
; RUN: %cheri_llc -relocation-model=pic %s -o - | FileCheck -check-prefix=BOUNDS %s
; RUN: %cheri_llc -cheri-no-global-bounds -relocation-model=pic %s -o - | FileCheck -check-prefix=NOBOUNDS %s

; ModuleID = 'global.c'

@x = global i64 0, align 8

; Function Attrs: nounwind
define void @foo(i64 %y) addrspace(200) nounwind {
; BOUNDS-LABEL: foo:
; BOUNDS:       # %bb.0: # %entry
; BOUNDS-NEXT:    lui $1, %hi(%neg(%gp_rel(foo)))
; BOUNDS-NEXT:    daddu $1, $1, $25
; BOUNDS-NEXT:    daddiu $1, $1, %lo(%neg(%gp_rel(foo)))
; BOUNDS-NEXT:    ld $1, %got_disp(x)($1)
; BOUNDS-NEXT:    cfromddc $c1, $1
; BOUNDS-NEXT:    csetbounds $c1, $c1, 8
; BOUNDS-NEXT:    jr $ra
; BOUNDS-NEXT:    csd $4, $zero, 0($c1)
;
; NOBOUNDS-LABEL: foo:
; NOBOUNDS:       # %bb.0: # %entry
; NOBOUNDS-NEXT:    lui $1, %hi(%neg(%gp_rel(foo)))
; NOBOUNDS-NEXT:    daddu $1, $1, $25
; NOBOUNDS-NEXT:    daddiu $1, $1, %lo(%neg(%gp_rel(foo)))
; NOBOUNDS-NEXT:    ld $1, %got_disp(x)($1)
; NOBOUNDS-NEXT:    jr $ra
; NOBOUNDS-NEXT:    sd $4, 0($1)
entry:
  store i64 %y, i64 addrspace(200)* addrspacecast(i64* @x to i64 addrspace(200)*), align 8
  ret void
}
