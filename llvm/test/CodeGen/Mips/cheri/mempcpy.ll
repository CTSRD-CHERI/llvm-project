; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %cheri_purecap_llc %s -o - -O2 | FileCheck %s '-D#CAP_SIZE=16'

define i8 addrspace(200)* @wrap_mempcpy(i8 addrspace(200)* %dst, i8 addrspace(200)* %src, i64 %n) nounwind {
; CHECK-LABEL: wrap_mempcpy:
; CHECK:       # %bb.0:
; CHECK-NEXT:    cincoffset $c11, $c11, -[[#STACKFRAME_SIZE:]]
; CHECK-NEXT:    csd $16, $zero, [[# STACKFRAME_SIZE - 8]]($c11)
; CHECK-NEXT:    csc $c18, $zero, [[#CAP_SIZE * 1]]($c11)
; CHECK-NEXT:    csc $c17, $zero, 0($c11)
; CHECK-NEXT:    move $16, $4
; CHECK-NEXT:    lui $1, %pcrel_hi(_CHERI_CAPABILITY_TABLE_-8)
; CHECK-NEXT:    daddiu $1, $1, %pcrel_lo(_CHERI_CAPABILITY_TABLE_-4)
; CHECK-NEXT:    cgetpccincoffset $c1, $1
; CHECK-NEXT:    clcbi $c12, %capcall20(memcpy)($c1)
; CHECK-NEXT:    cjalr $c12, $c17
; CHECK-NEXT:    cmove $c18, $c3
; CHECK-NEXT:    cincoffset $c3, $c18, $16
; CHECK-NEXT:    clc $c17, $zero, 0($c11)
; CHECK-NEXT:    clc $c18, $zero, [[#CAP_SIZE * 1]]($c11)
; CHECK-NEXT:    cld $16, $zero, [[# STACKFRAME_SIZE - 8]]($c11)
; CHECK-NEXT:    cjr $c17
; CHECK-NEXT:    cincoffset $c11, $c11, [[#STACKFRAME_SIZE]]
  %1 = tail call i8 addrspace(200)* @mempcpy(i8 addrspace(200)* %dst, i8 addrspace(200)* %src, i64 %n)
  ret i8 addrspace(200)* %1
}

declare i8 addrspace(200)* @mempcpy(i8 addrspace(200)*, i8 addrspace(200)*, i64)
