; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %cheri_purecap_llc -O1 %s -o - -disable-mips-delay-filler | FileCheck %s

%struct.name_t = type { i8 addrspace(200)* }

@x = common local_unnamed_addr addrspace(200) global %struct.name_t zeroinitializer, align 16

; Function Attrs: nounwind
define void @test(%struct.name_t addrspace(200)* %str) local_unnamed_addr #0 {
; CHECK-LABEL: test:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    lui $1, %pcrel_hi(_CHERI_CAPABILITY_TABLE_-8)
; CHECK-NEXT:    daddiu $1, $1, %pcrel_lo(_CHERI_CAPABILITY_TABLE_-4)
; CHECK-NEXT:    cgetpccincoffset $c1, $1
; CHECK-NEXT:    clcbi $c1, %captab20(x)($c1)
; CHECK-NEXT:    clc $c2, $zero, 0($c1)
; CHECK-NEXT:    csc $c2, $zero, 0($c3)
; CHECK-NEXT:    clw $1, $zero, 24($c1)
; CHECK-NEXT:    csw $1, $zero, 24($c3)
; CHECK-NEXT:    cld $1, $zero, 16($c1)
; CHECK-NEXT:    csd $1, $zero, 16($c3)
; CHECK-NEXT:    cjr $c17
; CHECK-NEXT:    nop
; CHERI256 couldn't do a capability copy here, instead it used two 8-byte ones
entry:
  %0 = bitcast %struct.name_t addrspace(200)* %str to i8 addrspace(200)*
  call void @llvm.memcpy.p200i8.p200i8.i64(i8 addrspace(200)* align 16 %0, i8 addrspace(200)* align 16 bitcast (%struct.name_t addrspace(200)* @x to i8 addrspace(200)*), i64 28, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p200i8.p200i8.i64(i8 addrspace(200)* nocapture writeonly, i8 addrspace(200)* nocapture readonly, i64, i1) #1

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
