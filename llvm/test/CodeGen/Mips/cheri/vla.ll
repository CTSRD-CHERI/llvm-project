; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; Check that we can generate position dependent code (but it probably won't work)
; RUN: %cheri_llc -verify-machineinstrs -target-abi n64 -relocation-model=static -o - %s -O0 | %cheri_FileCheck %s -check-prefixes N64
; RUN: %cheri_llc -verify-machineinstrs -target-abi purecap -relocation-model=static -cheri-cap-table-abi=pcrel -o - %s -O0  | %cheri_FileCheck %s -check-prefixes CAPTABLE

; Function Attrs: noinline nounwind optnone
; define void @foo(i64 %i) {
; entry:
;   %saved_stack = call i8 addrspace(200)* @llvm.stacksave.p200i8()
;   %vla = alloca i8, i64 %i, align 1, addrspace(200)
;   call void @test(i8 addrspace(200)* %vla)
;   call void @llvm.stackrestore.p200i8(i8 addrspace(200)* %saved_stack)
;   ret void
; }

define void @foo(i8 addrspace(200)* %arg) nounwind {
; N64-LABEL: foo:
; N64:       # %bb.0: # %entry
; N64-NEXT:    daddiu $sp, $sp, -16
; N64-NEXT:    sd $ra, 8($sp) # 8-byte Folded Spill
; N64-NEXT:    jal test
; N64-NEXT:    nop
; N64-NEXT:    ld $ra, 8($sp) # 8-byte Folded Reload
; N64-NEXT:    daddiu $sp, $sp, 16
; N64-NEXT:    jr $ra
; N64-NEXT:    nop
;
; CAPTABLE-LABEL: foo:
; CAPTABLE:       # %bb.0: # %entry
; CAPTABLE-NEXT:    cincoffset $c11, $c11, -16
; CAPTABLE-NEXT:    csc $c17, $zero, 0($c11) # 16-byte Folded Spill
; CAPTABLE-NEXT:    lui $1, %pcrel_hi(_CHERI_CAPABILITY_TABLE_-8)
; CAPTABLE-NEXT:    daddiu $1, $1, %pcrel_lo(_CHERI_CAPABILITY_TABLE_-4)
; CAPTABLE-NEXT:    cgetpccincoffset $c1, $1
; CAPTABLE-NEXT:    clcbi $c12, %capcall20(test)($c1)
; CAPTABLE-NEXT:    cjalr $c12, $c17
; CAPTABLE-NEXT:    nop
; CAPTABLE-NEXT:    clc $c17, $zero, 0($c11) # 16-byte Folded Reload
; CAPTABLE-NEXT:    cincoffset $c11, $c11, 16
; CAPTABLE-NEXT:    cjr $c17
; CAPTABLE-NEXT:    nop
entry:
  call void @test(i8 addrspace(200)* %arg)
  ret void
}

; Function Attrs: nounwind
declare i8 addrspace(200)* @llvm.stacksave.p200i8() #1

declare void @test(i8 addrspace(200)*) #2

; Function Attrs: nounwind readnone
declare i8 addrspace(200)* @llvm.cheri.pcc.get() #3

; Function Attrs: nounwind readnone
declare i8 addrspace(200)* @llvm.cheri.cap.offset.set.i64(i8 addrspace(200)*, i64) #3

; Function Attrs: nounwind
declare void @llvm.stackrestore.p200i8(i8 addrspace(200)*) #1
